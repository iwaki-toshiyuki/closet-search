name: Auto Deploy to style-log.com (Docker Compose)

on:
  push:
    branches:
      - main  # mainブランチでのみ実行

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHubのリポジトリをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. SSH鍵を設定
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # 3. SSH Configを作成(private EC2への接続設定)
      - name: Setup SSH Config
        run: |
          mkdir -p ~/.ssh
          echo "Host bastion" >> ~/.ssh/config
          echo "  HostName ${{ secrets.BASTION_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
          echo "Host private1" >> ~/.ssh/config
          echo "  HostName ${{ secrets.PRIVATE_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
          echo "  ProxyJump bastion" >> ~/.ssh/config
          echo "Host private2" >> ~/.ssh/config
          echo "  HostName ${{ secrets.PRIVATE2_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
          echo "  ProxyJump bastion" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          cat ~/.ssh/config

      # 4. Bastionへの接続テスト
      - name: Test SSH Connection to Bastion
        run: ssh -o StrictHostKeyChecking=no bastion "echo 'Bastion OK'"

      # 5. Private EC2への接続テスト
      - name: Test SSH Connection to Private EC2
        run: ssh -o StrictHostKeyChecking=no private1 "echo 'Private1 OK'"

      - name: Test SSH Connection to Private2
        run: ssh -o StrictHostKeyChecking=no private2 "echo 'Private2 OK'"

      # 6. デプロイ処理
      #Private1
      - name: Deploy to Private1
        run: |
          ssh -o StrictHostKeyChecking=no private1 << 'EOF'
            set -e
            cd /home/ec2-user/closet-search
            git remote set-url origin https://github.com/summer-hackathon-c/closet-search.git
            git fetch --all
            git reset --hard origin/main
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up --build -d
            echo ">>> Deployment to private1 completed!"
          EOF
          
      #Private2
      - name: Deploy to Private2
        run: |
          ssh -o StrictHostKeyChecking=no private2 << 'EOF'
            set -e
            cd /home/ec2-user/closet-search
            git remote set-url origin https://github.com/summer-hackathon-c/closet-search.git
            git fetch --all
            git reset --hard origin/main
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up --build -d
            echo ">>> Deployment to private2 completed!"
