# Generated by Django 4.1 on 2025-08-08 13:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("user_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("admin_flag", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                ("item_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("create_date", models.DateField(auto_now_add=True)),
                ("purchase_date", models.DateField()),
                ("price", models.IntegerField()),
                ("season", models.PositiveSmallIntegerField()),
                ("description", models.CharField(blank=True, max_length=50, null=True)),
                ("delete_flag", models.BooleanField(default=False)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "items",
                "ordering": ["purchase_date"],
            },
        ),
        migrations.CreateModel(
            name="ItemPhoto",
            fields=[
                ("photo_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("url", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "item_photos",
                "ordering": ["photo_id"],
            },
        ),
        migrations.CreateModel(
            name="WearingHistory",
            fields=[
                (
                    "wearing_history_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("wearing_date", models.DateField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "wearing_histories",
                "ordering": ["wearing_history_id"],
            },
        ),
        migrations.CreateModel(
            name="WearingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="items.item"
                    ),
                ),
                (
                    "wearing_history_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="items.wearinghistory",
                    ),
                ),
            ],
            options={
                "db_table": "wearing_items",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("tag_name", models.CharField(max_length=50)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tags",
                "ordering": ["tag_id"],
            },
        ),
        migrations.CreateModel(
            name="ItemTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="items.item"
                    ),
                ),
                (
                    "tag_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="items.tag"
                    ),
                ),
            ],
            options={
                "db_table": "item_tags",
            },
        ),
    ]
